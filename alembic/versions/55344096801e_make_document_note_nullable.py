"""Make document note nullable

Revision ID: 55344096801e
Revises: 0002
Create Date: 2025-10-19 21:39:10.980079
"""
from __future__ import annotations

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision = '55344096801e'
down_revision = '0002'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('audit_logs', 'doc_number',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('audit_logs', 'changed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('doc_counter', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('doc_numbers', 'reserved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('documents', 'numeric',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('documents', 'reg_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('documents', 'note',
               existing_type=postgresql.CITEXT(),
               nullable=True)
    op.alter_column('equipment', 'factory_no',
               existing_type=sa.VARCHAR(length=200),
               type_=postgresql.CITEXT(),
               existing_nullable=True)
    op.alter_column('equipment', 'order_no',
               existing_type=sa.VARCHAR(length=200),
               type_=postgresql.CITEXT(),
               existing_nullable=True)
    op.alter_column('equipment', 'label',
               existing_type=sa.VARCHAR(length=200),
               type_=postgresql.CITEXT(),
               existing_nullable=True)
    op.alter_column('equipment', 'station_no',
               existing_type=sa.VARCHAR(length=200),
               type_=postgresql.CITEXT(),
               existing_nullable=True)
    op.alter_column('equipment', 'station_object',
               existing_type=sa.VARCHAR(length=200),
               type_=postgresql.CITEXT(),
               existing_nullable=True)
    op.alter_column('equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_equipment_unique_attributes'), table_name='equipment', postgresql_where='((station_object IS NOT NULL) OR (station_no IS NOT NULL) OR (label IS NOT NULL) OR (factory_no IS NOT NULL))')
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_equipment_unique_attributes'), 'equipment', [sa.literal_column("lower(COALESCE(station_object, ''::character varying)::text)"), sa.literal_column("lower(COALESCE(station_no, ''::character varying)::text)"), sa.literal_column("lower(COALESCE(label, ''::character varying)::text)"), sa.literal_column("lower(COALESCE(factory_no, ''::character varying)::text)")], unique=True, postgresql_where='((station_object IS NOT NULL) OR (station_no IS NOT NULL) OR (label IS NOT NULL) OR (factory_no IS NOT NULL))')
    op.alter_column('equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('equipment', 'station_object',
               existing_type=postgresql.CITEXT(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('equipment', 'station_no',
               existing_type=postgresql.CITEXT(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('equipment', 'label',
               existing_type=postgresql.CITEXT(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('equipment', 'order_no',
               existing_type=postgresql.CITEXT(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('equipment', 'factory_no',
               existing_type=postgresql.CITEXT(),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('documents', 'note',
               existing_type=postgresql.CITEXT(),
               nullable=False)
    op.alter_column('documents', 'reg_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('documents', 'numeric',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('doc_numbers', 'reserved_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('doc_counter', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('audit_logs', 'changed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('audit_logs', 'doc_number',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    # ### end Alembic commands ###
